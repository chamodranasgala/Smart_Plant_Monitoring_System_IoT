#include <ESP8266WiFi.h>
#include <PubSubClient.h>
#include <DHT.h>

// Wi-Fi and MQTT settings
const char* ssid = "Dialog 4G XYZ Home";
const char* password = "D28633ee11";
const char* mqtt_server = "192.168.8.185";

// MQTT topics
const char* mqtt_client_id = "SmartPlantMonitor";
const char* mqtt_topic_temp = "smart_plant/temperature";
const char* mqtt_topic_humidity = "smart_plant/humidity";
const char* mqtt_topic_soil = "smart_plant/soil";
const char* mqtt_topic_pir = "smart_plant/pir";

// DHT sensor configuration
DHT dht(D4, DHT11);

// Soil moisture sensor pin
#define soil A0

// PIR motion sensor pin
#define PIR D5

WiFiClient espClient;
PubSubClient client(espClient);

void setup_wifi() {
  delay(10);
  Serial.begin(115200);
  Serial.println();
  Serial.print("Connecting to ");
  Serial.println(ssid);

  WiFi.mode(WIFI_STA);
  WiFi.begin(ssid, password);

  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }

  randomSeed(micros());

  Serial.println("");
  Serial.println("WiFi connected");
  Serial.print("IP address: ");
  Serial.println(WiFi.localIP());
}

void callback(char* topic, byte* payload, unsigned int length) {
  // Handle MQTT messages if needed
}

void reconnect() {
  while (!client.connected()) {
    Serial.print("Attempting MQTT connection...");
    String clientId = "SmartPlantMonitor-";
    clientId += String(random(0xffff), HEX);
    if (client.connect(clientId.c_str())) {
      Serial.println("connected");
      // Subscribe to MQTT topics here if needed
    } else {
      Serial.print("failed, rc=");
      Serial.print(client.state());
      Serial.println(" try again in 5 seconds");
      delay(5000);
    }
  }
}

void setup() {
  pinMode(BUILTIN_LED, OUTPUT);
  setup_wifi();
  client.setServer(mqtt_server, 1883);
  client.setCallback(callback);

  dht.begin();
}

void loop() {
  if (!client.connected()) {
    reconnect();
  }
  client.loop();

  // Read DHT11 temperature and humidity data
  float temperature = dht.readTemperature();
  float humidity = dht.readHumidity();

  // Read soil moisture data
  int soilMoisture = analogRead(soil);
  soilMoisture = map(soilMoisture, 0, 1024, 0, 100);
  soilMoisture = (soilMoisture - 100) * -1;

  // Read PIR motion sensor data
  int motionDetected = digitalRead(PIR);

  // Publish sensor data to MQTT topics
  client.publish(mqtt_topic_temp, String(temperature).c_str());
  client.publish(mqtt_topic_humidity, String(humidity).c_str());
  client.publish(mqtt_topic_soil, String(soilMoisture).c_str());
  client.publish(mqtt_topic_pir, String(motionDetected).c_str());

  // Print sensor data to Serial Monitor
  Serial.println("----------------------------------------------");
  Serial.print("Temperature: ");
  Serial.println(temperature);
  Serial.print("Humidity: ");
  Serial.println(humidity);
  Serial.print("Soil Moisture: ");
  Serial.println(soilMoisture);
  Serial.print("Motion Detected: ");
  Serial.println(motionDetected);

  delay(800); // Adjust the delay as needed

}
